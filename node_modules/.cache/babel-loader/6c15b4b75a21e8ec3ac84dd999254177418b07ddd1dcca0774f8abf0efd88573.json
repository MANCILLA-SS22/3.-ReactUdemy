{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxelt\\\\OneDrive\\\\Documentos\\\\PROYECTOS_PERSONALES\\\\REACT\\\\3.-ReactUdemy\\\\src\\\\components\\\\UserInput\\\\UserInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUserInput = {\n  \"current-savings\": 10000,\n  \"yearly-contribution\": 1200,\n  \"expected-return\": 7,\n  \"duration\": 10\n};\nfunction UserInput() {\n  _s();\n  const [userInput, setUserInput] = useState(initialUserInput);\n  function submiHandler(event) {\n    event.preventDefault();\n  }\n  function resetHandler() {\n    setUserInput(initialUserInput);\n  }\n\n  //Since inputChangeHandler is passed as a value to onChange, will only be executed by react whenever the value in this input changes. So therefore, indirectly inputChangeHandler will only be executed when the input value changes. We must use arrow functions in this function because we have to pass in two arguments (input and value) instead of only one. That's to say, if we wouldn't use arrow functions, then we would be just passin in one argument, which will be \"event\". An arrow function prevents the inputChangeHandler() function from executing after the component is mounted. It onlys execute when users add a new character.\n  function inputChangeHandler(input, value) {\n    console.log(input, value);\n    //We have to call setUserInput when the inputChangeHandler is triggered, becasue there, we want to update the state object and stor the latest entered values in that state object. Now, in inputChangeHandler, we want to set our state to a new object, which of course should be based on the old object because we don't want to discard the values that we're not changing. Sp, that's why we use this anonymus arrow function for updating the state by passing a function to this state updating dunction (setUserInput). And finally, this function will recieve the latest values (previously stored user input) in \"prevInput\" , and should then yield a new object representing the new state. \n    setUserInput(prevInput => {\n      console.log(prevInput);\n      return {\n        ...prevInput,\n        [input]: value\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submiHandler,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChanges: event => inputChangeHandler(\"current-savings\", event.target.value),\n          value: userInput[\"current-savings\"],\n          type: \"number\",\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChanges: event => inputChangeHandler(\"yearly-contribution\", event.target.value),\n          value: userInput[\"yearly-contribution\"],\n          type: \"number\",\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChanges: event => inputChangeHandler(\"expected-return\", event.target.value),\n          value: userInput[\"expected-return\"],\n          type: \"number\",\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChanges: event => inputChangeHandler(\"duration\", event.target.value),\n          value: userInput[\"duration\"],\n          type: \"number\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetHandler,\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(UserInput, \"OL/F48CuRZxN7OtvePsAMgZjytM=\");\n_c = UserInput;\n;\nexport default UserInput;\nvar _c;\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialUserInput","UserInput","_s","userInput","setUserInput","submiHandler","event","preventDefault","resetHandler","inputChangeHandler","input","value","console","log","prevInput","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChanges","target","type","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/xxelt/OneDrive/Documentos/PROYECTOS_PERSONALES/REACT/3.-ReactUdemy/src/components/UserInput/UserInput.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst initialUserInput = {\r\n    \"current-savings\": 10000,\r\n    \"yearly-contribution\": 1200,\r\n    \"expected-return\": 7,\r\n    \"duration\": 10,\r\n}\r\n\r\nfunction UserInput(){\r\n\r\n    const [userInput, setUserInput] = useState(initialUserInput);\r\n\r\n    function submiHandler(event){\r\n        event.preventDefault();\r\n\r\n\r\n    }\r\n\r\n    function resetHandler(){\r\n        setUserInput(initialUserInput);\r\n    }\r\n\r\n    //Since inputChangeHandler is passed as a value to onChange, will only be executed by react whenever the value in this input changes. So therefore, indirectly inputChangeHandler will only be executed when the input value changes. We must use arrow functions in this function because we have to pass in two arguments (input and value) instead of only one. That's to say, if we wouldn't use arrow functions, then we would be just passin in one argument, which will be \"event\". An arrow function prevents the inputChangeHandler() function from executing after the component is mounted. It onlys execute when users add a new character.\r\n    function inputChangeHandler(input, value){\r\n        console.log(input, value)\r\n        //We have to call setUserInput when the inputChangeHandler is triggered, becasue there, we want to update the state object and stor the latest entered values in that state object. Now, in inputChangeHandler, we want to set our state to a new object, which of course should be based on the old object because we don't want to discard the values that we're not changing. Sp, that's why we use this anonymus arrow function for updating the state by passing a function to this state updating dunction (setUserInput). And finally, this function will recieve the latest values (previously stored user input) in \"prevInput\" , and should then yield a new object representing the new state. \r\n        setUserInput((prevInput) => {\r\n            console.log(prevInput)\r\n            return{\r\n                ...prevInput,\r\n                [input]: value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <form onSubmit={submiHandler} className=\"form\">\r\n\r\n            <div className=\"input-group\">\r\n                <p>\r\n                    <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n                    <input onChanges={(event) => inputChangeHandler(\"current-savings\", event.target.value)} value={userInput[\"current-savings\"]} type=\"number\" id=\"current-savings\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n                    <input onChanges={(event) => inputChangeHandler(\"yearly-contribution\", event.target.value)} value={userInput[\"yearly-contribution\"]} type=\"number\" id=\"yearly-contribution\" />\r\n                </p>\r\n            </div>\r\n            \r\n            <div className=\"input-group\">\r\n                <p>\r\n                    <label htmlFor=\"expected-return\">Expected Interest (%, per year)</label>\r\n                    <input onChanges={(event) => inputChangeHandler(\"expected-return\", event.target.value)} value={userInput[\"expected-return\"]} type=\"number\" id=\"expected-return\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n                    <input onChanges={(event) => inputChangeHandler(\"duration\", event.target.value)} value={userInput[\"duration\"]} type=\"number\" id=\"duration\" />\r\n                </p>\r\n            </div>\r\n\r\n            <p className=\"actions\">\r\n                <button onClick={resetHandler} type=\"reset\" className=\"buttonAlt\">Reset</button>\r\n                <button type=\"submit\" className=\"button\">Calculate</button>\r\n            </p>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default UserInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}