{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxelt\\\\OneDrive\\\\Documentos\\\\PROYECTOS_PERSONALES\\\\REACT\\\\3.-ReactUdemy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/Header/Header';\nimport ResultTable from './components/ResultTable/ResultTable';\nimport UserInput from './components/UserInput/UserInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  function calculateHandler(value) {\n    setUserInput(value);\n  }\n  ;\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = +userInput['currentSavings'];\n    const yearlyContribution = +userInput['yearlyContribution'];\n    const expectedReturn = +userInput['expectedReturn'] / 100;\n    const duration = +userInput['duration'];\n    // console.log(currentSavings, yearlyContribution, expectedReturn, duration);\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  console.log(yearlyData);\n  console.log(userInput);\n\n  /* const [results, setResults] = useState(null);\n  \n  function calculateHandler(userInput){\n    \n    const yearlyData = []; // per-year results\n    let currentSavings = +userInput['current-savings'];\n    const yearlyContribution = +userInput['yearly-contribution'];\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n     for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n     setResults(yearlyData);\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), !userInput ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No investment calculated yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(ResultTable, {\n      data: yearlyData,\n      initialInvestment: userInput.currentSavings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","ResultTable","UserInput","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","value","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","data","initialInvestment","_c","$RefreshReg$"],"sources":["C:/Users/xxelt/OneDrive/Documentos/PROYECTOS_PERSONALES/REACT/3.-ReactUdemy/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Header from './components/Header/Header';\nimport ResultTable from './components/ResultTable/ResultTable';\nimport UserInput from './components/UserInput/UserInput';\n\nfunction App() {\n\n  const [userInput, setUserInput] = useState(null);\n  \n  function calculateHandler(value){\n    setUserInput(value)\n  };\n  \n  const yearlyData = [];\n  if (userInput){\n    let currentSavings = +userInput['currentSavings'];\n    const yearlyContribution = +userInput['yearlyContribution'];\n    const expectedReturn = +userInput['expectedReturn'] / 100;\n    const duration = +userInput['duration'];\n    // console.log(currentSavings, yearlyContribution, expectedReturn, duration);\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n  }\n\n  console.log(yearlyData);\n  console.log(userInput)\n\n  /* const [results, setResults] = useState(null);\n  \n  function calculateHandler(userInput){\n    \n    const yearlyData = []; // per-year results\n    let currentSavings = +userInput['current-savings'];\n    const yearlyContribution = +userInput['yearly-contribution'];\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    setResults(yearlyData);\n  }; */\n\n  return (\n    <div>\n      <Header/>\n      <UserInput onCalculate={calculateHandler}/>\n      {!userInput ? <p>No investment calculated yet</p> : <ResultTable data={yearlyData} initialInvestment={userInput.currentSavings}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,SAAS,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,SAASU,gBAAgBA,CAACC,KAAK,EAAC;IAC9BF,YAAY,CAACE,KAAK,CAAC;EACrB;EAAC;EAED,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIJ,SAAS,EAAC;IACZ,IAAIK,cAAc,GAAG,CAACL,SAAS,CAAC,gBAAgB,CAAC;IACjD,MAAMM,kBAAkB,GAAG,CAACN,SAAS,CAAC,oBAAoB,CAAC;IAC3D,MAAMO,cAAc,GAAG,CAACP,SAAS,CAAC,gBAAgB,CAAC,GAAG,GAAG;IACzD,MAAMQ,QAAQ,GAAG,CAACR,SAAS,CAAC,UAAU,CAAC;IACvC;;IAEA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;EACF;EAEAQ,OAAO,CAACC,GAAG,CAACX,UAAU,CAAC;EACvBU,OAAO,CAACC,GAAG,CAACf,SAAS,CAAC;;EAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE,oBACEH,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTvB,OAAA,CAACF,SAAS;MAAC0B,WAAW,EAAEnB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC1C,CAACpB,SAAS,gBAAGH,OAAA;MAAAmB,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGvB,OAAA,CAACH,WAAW;MAAC4B,IAAI,EAAElB,UAAW;MAACmB,iBAAiB,EAAEvB,SAAS,CAACK;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9H,CAAC;AAEV;AAACrB,EAAA,CA9DQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}